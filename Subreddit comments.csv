;Comments
0;ive been working in software for nearly  years for the last  ive worked with agile teams i dont recognize agile any more xb when we started it was about making life better for the people that created the software with extreme programming it was yeah lets focus on that stuff that we know is important quality clean code taking time to clean up when things got messy and recognizing the things we all knew were true that customers frequently changed their minds so creating huge long term plans was often a waste of time xb now its exactly what the article said an agile industrial complex most of the scrum masters or agile coaches i speak with these days have never been software developers how can that possibly work the focus has shifted from developers to executives mostly because executives can pay those sweet sweet consulting contracts and scrum mastersagile coaches measure themselves based on how many lego games they know as opposed to understanding the problems their teams are facing or researching new ci techniques or god forbid even being able to demonstrate how to write a good unit test hell atlassian is even offering a jira administrator certificate aimed at scrum masters for fucks sake xb i want to say to developers that for some of us at least it used to be about actually helping you guys i dont blame you if you dont believe me xb edit thank you for the gold stranger 
1;january through july management client and product team kick around some ideas do some team building at the brewpub decision d can always wait for person p to get back from their cruise have you heard about this new framework july through september buckle down and get serious about the plan someone spends two months crafting an overly detailed mockup september th everyone reply all to this email with any pto you plan to take between now and new years we are going to be on a tight schedule here and are deploying the third week of december
2;how many people commenting actually read the article i did twice and i still cant find a coherent point inside of it somebody had a deadline and just decided to dump the entire contents of agile section of their brain onto the page at once
3;serious question how do i turn my passion for criticizing the typical pseudoagile practices into a lucrative job
4;the biggest problem i found was managers embrace every part of agile except refactoring they see it working and move you on to the next task after a while you go beyond just making the test pass because you know its the only chance youll get to work on that code
5;agile is structured the way it is for a reason it is a software development process framework tailored to the needs of the business remember the business in general does not favor  quality beyond a certain very low threshold  craftsmanship  your ability to concentrate  your time being spent on development rather than administrivia  your personal development as an engineer the business does favor  transparency of the process to management  management being informed of progress towards the goal at all times  management being able to change directions and set new requirements at any time  metrics  everybody being on the same page  accurate time and money cost estimates  low risk profile  conformance to industry best practice  a large talent pool to draw from  as low a salary for developers as possible its like i said whatever it may have been in the past agile is today mostly a failed attempt to emulate one good developer with an array of average developers companies want to get good developer results with the developers they can get at the salaries that they are willing to pay _and_ mitigate the risks of good developers such as low bus factor they hope to get it by sharing the cognitive load of a difficult programming task among several such developers by keeping them in a state of continuous communication and continuous kt this continuous kt bit also figures in the transparency to management bit of the deal and is the stated reason why you dont get an office or even a cubicle anymore just a patch of desk in a loud busy room the unstated reason being that such arrangements make for an easy affordable panopticon edit when i say the business doesnt favor something what i mean is not that no business values these things plenty of businesses claim to and some actually put their money where their mouth is but when it comes right down to the wire the things in the first bullet list will all be sacrificed to preserve the things in the second simply because the ceo doesnt care about you how you work or how best to get more value out of you hes playing dimensional chess using entire divisions as pawns
6;agile is just another school of kung fu consultants will just rotate new names for mental models people can adopt which are mostly based on common sense theres an endless list of best practice advice to pool from so they only have to pick a subset on each new rebranding in the end all of this nonsense is a side effect of software projects often being late and missing their mark once execs are in that mindset theyre easily vulnerable to a consultant saying its all because theyre not following the new industry standard of latest agile rebranding even agile has several offshoots like saying you need more scrum masters or you have to follow safe framework and need safe certified consultants
7;deleted
8;i completely agree its led to a gamification of the wrong metrics it gives managers the false belief that they can increase velocity by adding programmers and it decreases code ownership since programmers are only responsible for their story and not the code base as a whole i think it has good parts and it was never meant to be dogmatic unfortunately it has become the magic wand of management these days
9;maybe a bunch of moron nonprogrammers who try to optimize output while only observing short term value are the problem
10;management is the problem agile may or may not be the solution
11;oh good i was worried that our weekly post shitting on agile was going to be late
12;maybe its not a methodology problem maybe its a people problem perhaps we should write a manifesto about that oh wait
13;what you need is good people if you have good people everything else will fall into place if you dont have good people no amount of process or method will fix your problems its a hard and inconvenient truth but this has been my experience there is no substitute for good people
14;cargo cult agile has really gotten out of control the same thing has happened to several major world religions
15;agile is basically just a collection of thought terminating cliches at this point even going back to the manifesto as the author suggests just brings us back to the root of the problem the manifesto is dead set against analysis paralysis and worriers etc its antithought it implicitly shifts control to people who dont know what theyre doing this is why its really taken over from the beginning agile was opposed to software design just react dont think do make short term gains which we can show to stakeholders think short term well fix it later its a constant push to constantly be delivering on business wants without any consideration for long term sustainability and dare i say joy and artistry agile is as sound a business practice as pursuing nothing but quarterly profits with no mind to the future or societal impact its like companies who invest nothing in research they might see short term gains but theyll never really move the needle and keep it there we dont need to get back to agile roots we need to rip those roots out set them on fire and focus on engineering solutions to engineering problems not project management bullshit
16;the problem is how well this is implemented in the team not agile itself i have been working for the last  years with agile and it is a bless if its well done
17;weve been able to implement agile really well in my previous workplace but on some teams neighboring teams horrible was a compliment it can work pretty well but that depends on how willing the team is to follow the methodology
18;every time something like this gets posted i never see any alternative to agile being suggested at all
19;business is the problem period
20;deleted
21;this is a low quality opinionated editorial thats actually from an agile coach without good data or evidence
22;programming is art if you treat it like a assembly job then you will face all sorts of issues sure agile lets you focus on priority tasks but it takes the fun out and you end up just completing tickets race to achieve weekly deliverables and stress yourself out
23;im sure this article says some insightful stuff eventually but its s very difficult read ive tried twice ill stick to the comments
24;maybe
25;scrum which is what most people mean when they say agile was developed in an environment of frontend consulting thus if youre building a website as a consultant it works really well if youre only doing one of those working on the frontend or working as a consultant then it will be frustrating if youre doing neither it will suck
26;maybe people are the problem agile is just a way  there are many ways  and theyre all broken in the same manner xb what started out as a neat idea was turned into a cargocult by middleclass children playing dressup in their parents clothes whilst trying to convince themselves and everyone around them that theyre doing a business xb if one cannot articulate in a sentence or two what the advantage of a process is andor cannot substantiate that with anything better than thats just how you do it  then the exercise is futile  drop it and go get some real work done 
27;agile is a somewhat if flawed good idea that doesnt work in a corporate structure maybe if businesses were less hierarchical agile might be more effective
28;ok i read and i am still not sure what is the problem mentioned in the article  anyway i feel that most teams agree that frequent delivery accepting and responding to change or close interactions in and between teams are important some of the scrumish ceremonies are also generally accepted as beneficial so the question is why do we have to insist on putting a name and rules on a process even if it doesnt fit our context  i see safe and referring to it as agile as a great example of abuse maybe its a necessary evil in big organization but what does it have to do with agile  the same way im fine with agile team managers sometimes a team cant efficiently self organize for many reasons but why call it agile 
29;my clients mostly dont have a methodology explicitly to me most of what i see looks like agileish i know its not real agile but it seems to pass for it in some places but its actually more like design by running in circles like a headless chicken theres constant spikesolutions happening for demos and deadlines and they all get rewritten because coding happens before requirements are complete at a lot of places ive been and of course when youre doing design by insanity automated testing doesnt happen frequent small git commits is just a shoegaze band name idea not something you actually do to me agile is what you do when the plan isnt working the best methodology is to plan things and get all your infrastructure in order when the plan is working you do that when the plan isnt working you need better plans and i suppose when nothing is happening at all it might be better to actually write some code instead of planning it
30;any methodology with a high number of prerequisites is a gamble by number of prerequisites i mean that many things have to go right in order for net benefits to appear in practice murphys law tends to win out and the prerequisites wont be satisfied proponents and vendors will forever keep saying try harder get more training
31;i have noticed that teams are so focused on being agile that they totally defeat the purpose of agile we have to have a retro at the end of the sprint its one of our ceremonies we have to stay agile oh really were doing two week sprints code freeze was wednesday monday was a holiday so we take an extra hour out of an already trimmed down week to do a retro of a sprint that truly had one week worth of work done just for the sake of staying agile i always go back to the actual definition of the word agile able to move quickly and easily i see teams so anchored to the agile methodology that they arent actually moving quickly or easy its totally self defeating
32;no development methodology is immune to bastardization by management and coaches until it becomes whatever management wants it to be
33;in my experience the only scrum masters ive ever worked with have been terrible theyve all been failed business analysts who knew a tiny bit of sql theyve always been so dogmatic about agile that they slow down development with days of meetings and make arbitrary deadlines for barely functional sections of work and believe that being agile means we shouldnt do any kind of technical design work i actually like the ideas of agile and what it set out to do but unfortunately i feel like ive only ever experienced a poor mockery if you read robert martins take on the current stake of agile he explicitly states that scrum master was never meant to be a full time position but instead a rotating role between members of the dev team to me it seems like a lot things agile sets out to solve can be solved by an efficient well designed process  clientpo wants to see deliverables more frequently fine have your cicd continuously deploying each commit of the develop branch to the development servers and give them access to that thats a much quicker feedback loop that some arbitrary  week goal  clientpo wants to be move involved in writing taskstickets fine they should describe the desired behaviour of the system to a dev who can transcribe that to a series of technical tasks  clientpo wants to change requirements in the middle of development get them to pair programme alongside the dev ive just been burnt too much by bad scrum and poorly scoped tickets that ive given up on agile actually working for devs
34; agile is the problem not agile utter bullshit like safe etc agile consultants selling management on topdown imposed nonsense processes 
35;maybe bad management is the problem maybe some managers will find a way to fuck up any methodology maybe the problem is these speakers at conventions who are trying to sell consulting contracts ya know its just like when devs get tribal about their tools theyll tell you x sucks and will result in bad software y is great and will result in good software but really its the skill of the developer that determines the quality of the code they write the skill of a manager determines the quality of their management
36;maybe we should stop talking about agile and the problem will go away
37;im staggered by the amount of discussion this post has thrown up while i mostly agree with the thrust of this paper it is in fact a complete load of guff
38;agile has been incredibly profitable for me it gives me the ability to manage multiple teams across orgs while minimizing unnecessary communication it provides autonomy
39;if moses had brought the agile manifesto down straight from god on stone tablets corporations would crushed them into dust scattered them over the golden calf and call that calf agile
40;i would not say its agile agile is at this point just a word the problem is ultimately a management one managers still suck at managing software production they want to apply manufacturing techniques to it uncritically they think that ceremony has value too many managers feel that if they arent providing instruction theyre not doing their job so long as managers are utterly clueless about software development no team coordination strategy we come up with will work
41;fake it till you make it is the problem
42;a colleague pointed me to this ebook which examines the agile principles as distinct from the practices that agile teams generally follow it makes some similar points especially how corporate culture and rigid industryapproved practices can impede the teams ability to deliver the bias is towards adapting agile practices to better follow the principles rather than abandoning agile altogether in fact the point is made in part  of the book if youre feeling pain i recommend giving it a read free pdf download with an infoq account 
43;beats the hell out of what preceded it
44;perhaps we should try programming motherfucker
45;the problem is businesses are shitty and no amount of you are shitty lets create a system that gets you out of the way apart from the parts you need to do will help pointless having agile when you have businesses where nontechnical people will insist on solutionising but wont take responsibility for prioritisation or proper production of decent requirements never mind actually managing stuff like technical debt sometimes getting a straight forward this first that later is next to impossible in most businesses it is always this officially this via email chains because i dont want my name attached officially requirements often end up being driven not by technical need but by who shows the least resistance  of businesses suck at it and will actively seek to work around any attempt to make them not suck agile was an attempt to par down the whole field to this is what needs to be done on your end to not suck this is what needs to be done on our end and since it came about businesses that suck have tried every which way to violate those core principles heres the reality of corporate it  management will avoid making firm requirements so they can pass the buck  management will avoid giving hard prioritisation because theyve promised everyone the world  management still has people who insist they know something about technology these are the three beasts that must be slayed to make development work
46;how do you become an agile consultant seems like a high paying racket and if you cant beat em join em
47; 
48;agile doesnt leave room for extensive documentation and testing people presume the specs produced by managers suffice
49;haha man not agile capitalistic system tries to squeeze people like lemons more new versions more features faster faaaasteeeeer so agile comes ps we release each  months
50;agile is like oop dynamic typing kubernetes aws etc stuff people sell to managers of software teams as magic bullets that will result in lower cost and faster better results most of the people selling these ideas are not themselves software developers as are the people buying them you want to know the solution dont work for a nontechnical boss then you will almost certainly not have any of the problems plaguing the industry
51;agile has become a muddy dogmatic wasteful series of meetings and processes at most places in my experience start with nothing introduce process when you need it define whatever processes you see fit to solve problems and importantly dont be afraid to say this process isnt working lets removechange it
52;people tend to approach this discussion as though its a choice between agile and no process at all really its a choice between agile and waterfall having worked in both waterfall and agile environments for  years each i can say unequivocally that agile leads to better software happier developers and happier stakeholders if you just started programming and you expect your paid gig to be a lot like your home projects where you have all the time you want to write the perfect system and no one expects status reports well thats just naive your company is paying you to produce working software not to indulge your passions get to work
53;no shit sherlock any methodology that elevates the process above the problem and solution and offers training and certificates has jumped the shark and is no longer useful
54;agilists must go back to the basics and simplicity of the manifesto and  principles um no look some agile concepts were great others apply only narrowly some are flat out wrong or abused for example collocation and pair programming this is sometimes a great thing at other times its a bloody distraction some people work better alone at least at first humans differ  something the agile manifesto blatantly ignores another example working software over comprehensive documentation works under some circumstances but ive experienced many instances where a line or two explaining the purpose of a module or some code has saved me day or weeks of time for gui automation development this principal fails utterly at some point you have to find and click on the control for that you need extensive clickbyclick documentation anything less is just rolling technical debt as the process is reinvented x the number of times the process must be written general principles for general programming are just that and should be considered rules of thumb rather than hard and fast rules baked into every development process
55;agile is like communism it doesnt work in practice because it clashes with nature and as long as humans are apes it wont work agile works for kent beck and pals because they are probably a worker cooperative where they themselves are their own managers trying to apply agile to a normal company with middle managers is a lost cause
